<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security-4.0.xsd">
    <beans:import resource="spring-servlet.xml"/>

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/users**" access="hasAnyRole"/>
        <headers>
            <cache-control />
        </headers>
        <!-- access denied page -->
        <access-denied-handler error-page="/403"/>

        <form-login
                login-processing-url="/j_spring_security_check"
                login-page="/login"
                default-target-url="/welcome"
                authentication-failure-url="/login?error"
                username-parameter="email"
                password-parameter="password"
        />

        <logout logout-success-url="/login?logout"
                logout-url="/j_spring_security_logout"
                delete-cookies="JSESSIONID"
        />
        <csrf disabled="true"/>
    </http>

    <!-- Select users and user_roles from database -->
    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="encoder" />
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "select email,password, enabled from user where email=?"
                               authorities-by-username-query=
                                       "select user.email, groupe.name
                                        from user
                                        inner join  user_has_groupe
                                            On user.id = user_has_groupe.user_id
                                        inner join groupe
                                            ON groupe.id=user_has_groupe.groupe_id=?" />
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="10" />
    </beans:bean>

</beans:beans>